Index: parse.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"parse.h\"\r\n#include \"semantics.cpp\"\r\n\r\n//本文件在语法分析器模块的基础上，增加了语义处理所需的代码\r\nscanner scan;\r\n\r\n//函数区\r\nvoid Parser(char *SrcFilePtr) {\r\n\t/*语法分析主程序:\r\n\t调用词法分析器的GetToken函数（封装在FetchToken中）返回记号，\r\n\t 然后使用核心产生式program()对记号流进行递归下降分析，\r\n\t 判断记号流的结构是否符合文法规则\r\n\t*/\r\n\tif (!scan.InitScanner(SrcFilePtr)) {\r\n\t\tprintf(\"open Source File Error!\\n\");\r\n\t\treturn;\r\n\t}\r\n\tFetchToken();//返回的记号存放在全局变量token中\r\n\tProgram();//递归下降的核心产生式\r\n\tscan.CloseScanner();\r\n}\r\n\r\n//主函数：产生式(语句级）逻辑区\r\nvoid Program() {\r\n\twhile (token.type != NONTOKEN) {//词法分析器输出NONTOKEN表示已达记号流末尾\r\n\t\tStatement();//匹配一条语句\r\n\t\tMatchToken(SEMICO);\r\n\t}\r\n}\r\n\r\nvoid Statement() {\r\n\tswitch (token.type) {\r\n\t\tcase ORIGIN:\r\n\t\t\tOriginStatment();\r\n\t\t\tbreak;\r\n\t\tcase ROT:\r\n\t\t\tRotStatement();\r\n\t\t\tbreak;\r\n\t\tcase SCALE:\r\n\t\t\tScaleStatment();\r\n\t\t\tbreak;\r\n\t\tcase FOR:\r\n\t\t\tForStatement();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tSyntaxError(2);\r\n\t}\r\n}\r\n\r\nvoid OriginStatment() {\r\n\tstruct ExprNode *origin_x, * origin_y;\r\n\tMatchToken(ORIGIN);\r\n\tMatchToken(IS);\r\n\tMatchToken(L_BRACKET);\r\n\torigin_x = Expression();\r\n\tMatchToken(COMMA);\r\n\torigin_y = Expression();\r\n\tMatchToken(R_BRACKET);\r\n\t/*\r\n\t\t//测试函数：打印表达式的语法树\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(origin_x, 0);\r\n\t\tprintf(\"\\n\");\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(origin_y, 0);\r\n\t\tprintf(\"\\n\");\r\n\t*/\r\n\tOrigin_x = get_expr_value(origin_x);\r\n\tOrigin_y = get_expr_value(origin_y);\r\n}\r\n\r\nvoid RotStatement() {\r\n\tstruct ExprNode *rotate;\r\n\tMatchToken(ROT);\r\n\tMatchToken(IS);\r\n\trotate = Expression();\r\n\r\n\t/*\r\n\t//测试函数：打印表达式的语法树\r\n\tprintf(\"[*]SyntaxTree:\\n\");\r\n\tPrintSyntaxTree(rotate, 0);\r\n\tprintf(\"\\n\");\r\n\t*/\r\n\t\r\n\tRot_ang = get_expr_value(rotate);\r\n\r\n}\r\n\r\nvoid ScaleStatment() {\r\n\tstruct ExprNode *scale_x, * scale_y;\r\n\tMatchToken(SCALE);\r\n\tMatchToken(IS);\r\n\tMatchToken(L_BRACKET);\r\n\tscale_x = Expression();\r\n\tMatchToken(COMMA);\r\n\tscale_y = Expression();\r\n\tMatchToken(R_BRACKET);\r\n\r\n\t/*\r\n\t\t//测试函数：打印表达式的语法树\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(scale_x, 0); printf(\"\\n\");\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(scale_y, 0); printf(\"\\n\");\r\n\t*/\r\n\tScale_x = get_expr_value(scale_x);\r\n\tScale_y = get_expr_value(scale_y);\r\n}\r\n\r\nvoid ForStatement() {\r\n\tstruct ExprNode *start_ptr, * end_ptr, * step_ptr, * x_ptr, * y_ptr;\r\n\r\n\tMatchToken(FOR);\r\n\tMatchToken(T);\r\n\tMatchToken(FROM);\r\n\tstart_ptr = Expression();\r\n\tMatchToken(TO);\r\n\tend_ptr = Expression();\r\n\tMatchToken(STEP);\r\n\tstep_ptr = Expression();\r\n\tMatchToken(DRAW);\r\n\tMatchToken(L_BRACKET);\r\n\tx_ptr = Expression();\r\n\tMatchToken(COMMA);\r\n\ty_ptr = Expression();\r\n\tMatchToken(R_BRACKET);\r\n\r\n\t/*\r\n\t\t//测试函数：打印表达式的语法树\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(start_ptr, 0);\r\n\t\tprintf(\"\\n\");\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(end_ptr, 0);\r\n\t\tprintf(\"\\n\");\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(step_ptr, 0);\r\n\t\tprintf(\"\\n\");\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(x_ptr, 0);\r\n\t\tprintf(\"\\n\");\r\n\t\tprintf(\"[*]SyntaxTree:\\n\");\r\n\t\tPrintSyntaxTree(y_ptr, 0);\r\n\t\tprintf(\"\\n\");\r\n\t*/\r\n\tdraw_loop(get_expr_value(start_ptr),get_expr_value(end_ptr),get_expr_value(step_ptr),x_ptr,y_ptr)\r\n\r\n}\r\n\r\n//主函数：产生式(表达式级)逻辑区\r\nstruct ExprNode *Expression() {\r\n\tstruct ExprNode *left, * right;\r\n\tenum Token_Type token_tmp;\r\n\tleft = Term();\r\n\twhile (token.type == PLUS || token.type == MINUS) {\r\n\t\ttoken_tmp = token.type;\r\n\t\tMatchToken(token_tmp);\r\n\t\tright = Term();\r\n\t\tleft = MakeExprNode(token_tmp, left, right);\r\n\t}\r\n\treturn left;\r\n}\r\n\r\nstruct ExprNode *Term() {\r\n\tstruct ExprNode *left, * right;\r\n\tenum Token_Type token_tmp;\r\n\r\n\tleft = Factor();\r\n\twhile (token.type == MUL || token.type == DIV) {\r\n\t\ttoken_tmp = token.type;\r\n\t\tMatchToken(token_tmp);\r\n\t\tright = Factor();\r\n\t\tleft = MakeExprNode(token_tmp, left, right);\r\n\t}\r\n\treturn left;\r\n}\r\n\r\nstruct ExprNode *Factor() {\r\n\tstruct ExprNode *factor_Node;\r\n\tenum Token_Type token_tmp;\r\n\r\n\tif (token.type == PLUS || token.type == MINUS) {\r\n\t\tstruct ExprNode *ConstPtr = (struct ExprNode *)malloc(sizeof(struct ExprNode));\r\n\t\tConstPtr->Content.CaseConst = 0;\r\n\t\tConstPtr->OpCode = CONST_ID;\r\n\r\n\t\ttoken_tmp = token.type;\r\n\t\tMatchToken(token.type);\r\n\r\n\t\tfactor_Node = Factor();\r\n\t\tfactor_Node = MakeExprNode(token_tmp, ConstPtr, factor_Node);\r\n\t} else\r\n\t\tfactor_Node = Component();\r\n\r\n\treturn factor_Node;\r\n}\r\n\r\nstruct ExprNode *Component() {\r\n\tstruct ExprNode *component_Node;\r\n\tenum Token_Type token_tmp;\r\n\r\n\tcomponent_Node = Atom();\r\n\r\n\tif (token.type == POWER) {\r\n\t\tstruct ExprNode *component_Node_another;\r\n\t\ttoken_tmp = token.type;\r\n\t\tMatchToken(POWER);\r\n\t\tcomponent_Node_another = Component();\r\n\r\n\t\tcomponent_Node = MakeExprNode(token_tmp, component_Node, component_Node_another);\r\n\t}\r\n\treturn component_Node;\r\n}\r\n\r\nstruct ExprNode *Atom() {\r\n\tstruct ExprNode *atom_Node;\r\n\tstruct Token token_tmp = token;\r\n\tswitch (token.type) {\r\n\t\tcase CONST_ID:\r\n\t\t\tatom_Node = MakeExprNode(token.type, token.value);\r\n\t\t\tMatchToken(token.type);\r\n\t\t\tbreak;\r\n\t\tcase T:\r\n\t\t\tatom_Node = MakeExprNode(token.type);\r\n\t\t\tMatchToken(token.type);\r\n\t\t\tbreak;\r\n\t\tcase FUNC: {\r\n\r\n\t\t\tMatchToken(token.type);\r\n\t\t\tMatchToken(L_BRACKET);\r\n\t\t\tatom_Node = MakeExprNode(FUNC, token_tmp.FuncPtr, Expression());\r\n\t\t\tMatchToken(R_BRACKET);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase L_BRACKET:\r\n\t\t\tMatchToken(token.type);\r\n\t\t\tatom_Node = Expression();\r\n\t\t\tMatchToken(R_BRACKET);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tSyntaxError(3);\r\n\t}\r\n\treturn atom_Node;\r\n}\r\n\r\n//构建语法树\r\nstruct ExprNode *MakeExprNode(enum Token_Type opcode, ...) {//此函数参数可变\r\n\tstruct ExprNode *ExprPtr = (struct ExprNode *)malloc(sizeof(struct ExprNode));\r\n\tva_list ArgPtr;\r\n\tExprPtr->OpCode = opcode;\r\n\tva_start(ArgPtr, opcode);\r\n\r\n\tswitch (opcode) {\r\n\t\tcase CONST_ID://常数节点\r\n\t\t\tExprPtr->Content.CaseConst = (double)va_arg(ArgPtr, double);\r\n\t\t\tbreak;\r\n\t\tcase T://参数节点\r\n\t\t\tExprPtr->Content.CaseParmPtr = &Parameter;\r\n\t\t\tbreak;\r\n\t\tcase FUNC://函数节点\r\n\t\t\tExprPtr->Content.CaseFunc.MathFuncPtr = (FuncPtr)va_arg(ArgPtr, FuncPtr);\r\n\t\t\tExprPtr->Content.CaseFunc.Child = (struct ExprNode *)va_arg(ArgPtr, struct ExprNode *);\r\n\t\t\tbreak;\r\n\t\tdefault://二元运算节点\r\n\t\t\tExprPtr->Content.CaseOperator.Left = (struct ExprNode *)va_arg(ArgPtr, struct ExprNode *);\r\n\t\t\tExprPtr->Content.CaseOperator.Right = (struct ExprNode *)va_arg(ArgPtr, struct ExprNode *);\r\n\t}\r\n\treturn ExprPtr;\r\n}\r\n\r\n//辅助函数\r\nvoid FetchToken() {\r\n\ttoken = scan.GetToken();\r\n\tif (token.type == ERRTOKEN)\r\n\t\tSyntaxError(1);\r\n}\r\n\r\nvoid MatchToken(enum Token_Type AToken) {//判断全局变量token当前类型值是否与AToken匹配\r\n\tif (token.type != AToken)\r\n\t\tSyntaxError(4);\r\n\telse {\r\n\t\t//printf(\"Match Token %s\\n\", token.lexeme);//测试语句\r\n\t\tFetchToken();\r\n\t}\r\n}\r\n\r\nvoid SyntaxError(int case_of) {//错误处理函数\r\n\tswitch (case_of) {\r\n\t\tcase 1://由FetchToken函数抛出：词法分析获取的记号类型为ERRTOKEN,即不构成正确的单词\r\n\t\t\tprintf(\"[*]Error code %d: Incorrect word:%s\\n\", case_of, token.lexeme);\r\n\t\t\tbreak;\r\n\t\tcase 2://由Statement函数抛出：不符合文法定义，句子开头的Token不正确\r\n\t\t\tprintf(\"[*]Error code %d:Incorrect start of sentence:%s\\n\", case_of, token.lexeme);\r\n\t\t\tbreak;\r\n\t\tcase 3://由Atom函数抛出：不符合文法定义，表达式不正确\r\n\t\t\tprintf(\"[*]Error code %d:Incorrect Expression:%s\\n\", case_of, token.lexeme);\r\n\t\t\tbreak;\r\n\t\tcase 4://由MatchToken函数抛出：不符合文法定义，语句错误（保留字、标点符等匹配失败）\r\n\t\t\tprintf(\"[*]Error code %d:Incorrect Match:%s\\n\", case_of, token.lexeme);\r\n\t\t\tbreak;\r\n\t}\r\n\tsystem(\"pause\");\r\n\texit(0);//程序终止\r\n}\r\n\r\n\r\n//测试函数\r\nvoid PrintSyntaxTree(struct ExprNode *root, int indent) {//打印表达式的语法树\r\n\tchar blank[50];\r\n\tblank[indent] = '\\0';\r\n\tfor (int i = 0; i < indent; i++)\r\n\t\tblank[i] = ' ';\r\n\r\n\tswitch (root->OpCode) {\r\n\t\tcase CONST_ID:\r\n\t\t\tprintf(\"%s%f\\n\", blank, root->Content.CaseConst);\r\n\t\t\tbreak;\r\n\r\n\t\tcase T:\r\n\t\t\tprintf(\"%s%s\\n\", blank, \"T\");\r\n\t\t\tbreak;\r\n\r\n\t\tcase FUNC:\r\n\t\t\tprintf(\"%s%x\\n\", blank, root->Content.CaseFunc.MathFuncPtr);\r\n\t\t\tif (root->Content.CaseFunc.Child != NULL)\r\n\t\t\t\tPrintSyntaxTree(root->Content.CaseFunc.Child, indent + 1);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tswitch (root->OpCode) {\r\n\t\t\t\tcase PLUS:\r\n\t\t\t\t\tprintf(\"%s%s\\n\", blank, \"+\");\r\n\t\t\t\t\tif (root->Content.CaseOperator.Left == NULL)\r\n\t\t\t\t\t\tprintf(\"%s %s\\n\", blank, \"0.0000\");\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Left, indent + 1);\r\n\t\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Right, indent + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MINUS:\r\n\t\t\t\t\tprintf(\"%s%s\\n\", blank, \"-\");\r\n\t\t\t\t\tif (root->Content.CaseOperator.Left == NULL)\r\n\t\t\t\t\t\tprintf(\"%s %s\\n\", blank, \"0.0000\");\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Left, indent + 1);\r\n\t\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Right, indent + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MUL:\r\n\t\t\t\t\tprintf(\"%s%s\\n\", blank, \"*\");\r\n\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Left, indent + 1);\r\n\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Right, indent + 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase DIV:\r\n\t\t\t\t\tprintf(\"%s%s\\n\", blank, \"/\");\r\n\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Left, indent + 1);\r\n\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Right, indent + 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase POWER:\r\n\t\t\t\t\tprintf(\"%s%s\\n\", blank, \"**\");\r\n\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Left, indent + 1);\r\n\t\t\t\t\tPrintSyntaxTree(root->Content.CaseOperator.Right, indent + 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/parse.cpp b/parse.cpp
--- a/parse.cpp	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/parse.cpp	(date 1671541128043)
@@ -5,7 +5,7 @@
 scanner scan;
 
 //函数区
-void Parser(char *SrcFilePtr) {
+void Parser(char * SrcFilePtr) {
 	/*语法分析主程序:
 	调用词法分析器的GetToken函数（封装在FetchToken中）返回记号，
 	 然后使用核心产生式program()对记号流进行递归下降分析，
@@ -143,7 +143,7 @@
 		PrintSyntaxTree(y_ptr, 0);
 		printf("\n");
 	*/
-	draw_loop(get_expr_value(start_ptr),get_expr_value(end_ptr),get_expr_value(step_ptr),x_ptr,y_ptr)
+	draw_loop(get_expr_value(start_ptr),get_expr_value(end_ptr),get_expr_value(step_ptr),x_ptr,y_ptr);
 
 }
 
@@ -321,7 +321,7 @@
 			break;
 
 		case FUNC:
-			printf("%s%x\n", blank, root->Content.CaseFunc.MathFuncPtr);
+			printf("%s%p\n", blank, root->Content.CaseFunc.MathFuncPtr);
 			if (root->Content.CaseFunc.Child != NULL)
 				PrintSyntaxTree(root->Content.CaseFunc.Child, indent + 1);
 			break;
Index: parse.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ifndef PARSE_H\r\n#define PARSE_H\r\n\r\n//本文件在语法分析器模块的基础上，增加了语义处理所需的代码\r\n#include\"semantics.h\"\r\n\r\n// 表达式节点\r\nstruct ExprNode\r\n{\r\n\tenum Token_Type OpCode;//记号种类\r\n\tunion {\r\n\t\tstruct {\r\n\t\t\tstruct ExprNode* Left, * Right;\r\n\t\t}CaseOperator;//二元运算\r\n\r\n\t\tstruct {\r\n\t\t\tstruct ExprNode* Child;\r\n\t\t\tFuncPtr MathFuncPtr;\r\n\t\t}CaseFunc;//函数调用\r\n\r\n\t\tdouble CaseConst;//常数，绑定右值\r\n\t\tdouble* CaseParmPtr;//参数T，绑定左值\r\n\t}Content;\r\n};\r\n\r\n\r\n//函数区\r\nvoid Parser(char* SrcFilePtr);//语法分析主程序\r\n\r\n//主函数：产生式(语句级)逻辑区\r\nvoid Program();\r\nvoid Statement();\r\nvoid OriginStatment();\r\nvoid RotStatement();\r\nvoid ScaleStatment();\r\nvoid ForStatement();\r\n\r\n//主函数：产生式(表达式级)逻辑区\r\nstruct ExprNode* Expression();\r\nstruct ExprNode* Term();\r\nstruct ExprNode* Factor();\r\nstruct ExprNode* Component();\r\nstruct ExprNode* Atom();\r\n\r\n//构建语法树\r\nstruct ExprNode* MakeExprNode(enum Token_Type opcode, ...);\r\n\r\n//辅助函数\r\nvoid FetchToken();\r\nvoid MatchToken(enum Token_Type AToken);\r\nvoid SyntaxError(int case_of);\r\n\r\n//测试函数\r\nvoid PrintSyntaxTree(struct ExprNode* root, int indent);//打印表达式的语法树\r\n\r\n\r\n#endif\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/parse.h b/parse.h
--- a/parse.h	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/parse.h	(date 1671541206748)
@@ -2,7 +2,7 @@
 #define PARSE_H
 
 //本文件在语法分析器模块的基础上，增加了语义处理所需的代码
-#include"semantics.h"
+#include"scanner.h"
 
 // 表达式节点
 struct ExprNode
Index: semantics.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"semantics.h\"\r\n#include <graphics.h>\r\n#include <conio.h>\r\n\r\nstruct Token token;\r\ndouble Parameter = 0;\r\ndouble Origin_x = 0.0, Origin_y = 0.0;\r\ndouble Rot_ang = 0.0;\r\ndouble Scale_x = 1, Scale_y = 1;\r\ndouble Draw_x, Draw_y;\r\n\r\n\r\n//计算表达式的值\r\ndouble get_expr_value(struct ExprNode *root) {\r\n\tif (root == NULL)\r\n\t\treturn 0.0;\r\n\tswitch (root -> OpCode) {\r\n\t\tcase PLUS:\r\n\t\t\treturn get_expr_value(root->Content.CaseOperator.Left) + get_expr_value(root->Content.CaseOperator.Right);\r\n\t\t\tbreak;\r\n\t\tcase MINUS:\r\n\t\t\treturn get_expr_value(root->Content.CaseOperator.Left) - get_expr_value(root->Content.CaseOperator.Right);\r\n\t\t\tbreak;\r\n\t\tcase MUL:\r\n\t\t\treturn get_expr_value(root->Content.CaseOperator.Left) * get_expr_value(root->Content.CaseOperator.Right);\r\n\t\t\tbreak;\r\n\t\tcase DIV:\r\n\t\t\treturn get_expr_value(root->Content.CaseOperator.Left) * get_expr_value(root->Content.CaseOperator.Right);\r\n\t\t\tbreak;\r\n\t\tcase POWER:\r\n\t\t\treturn pow(get_expr_value(root->Content.CaseOperator.Left), get_expr_value(root->Content.CaseOperator.Right));\r\n\t\t\tbreak;\r\n\t\tcase FUNC:\r\n\t\t\treturn ((FuncPtr)root->Content.CaseFunc.MathFuncPtr)(get_expr_value(root->Content.CaseFunc.Child));\r\n\t\tcase CONST_ID :\r\n\t\t\treturn root->Content.CaseConst;\r\n\t\t\tbreak;\r\n\t\tcase T:\r\n\t\t\treturn Parameter;\r\n\t\tdefault:\r\n\t\t\treturn 0.0 ;\r\n\t}\r\n}\r\n\r\n//计算点的实际坐标值\r\nvoid cal_coord(struct ExprNode *x_ptr, struct ExprNode *y_ptr) {\r\n\tdouble x_val, x_temp, y_val;\r\n\r\n\t// 计算表达式的值，得到点的原始坐标\r\n\tx_val = get_expr_value(x_ptr);\r\n\ty_val = get_expr_value(y_ptr);\r\n\r\n\t// 比例变换\r\n\tx_val *= Scale_x ;\r\n\ty_val *= Scale_y ;\r\n\r\n\t// 旋转变换\r\n\tx_temp = x_val * cos(Rot_ang) + y_val * sin(Rot_ang);\r\n\ty_val  = y_val * cos(Rot_ang) - x_val * sin(Rot_ang);\r\n\tx_val  = x_temp;\r\n\r\n\t// 平移变换\r\n\tx_val += Origin_x;\r\n\ty_val += Origin_y;\r\n\r\n\t// 返回变换后点的坐标\r\n\tDraw_x = x_val;\r\n    Draw_y= y_val;\r\n}\r\n\r\n// 绘制一个点\r\nvoid draw_pixel(unsigned long x, unsigned long y) {\r\n\tputpixel(x, y, RED);\r\n}\r\n\r\n// 图形绘制\r\nvoid draw_loop(double start_val, double end_val, double step_val, struct ExprNode *x_ptr, struct ExprNode *y_ptr)\r\n{\r\n\tinitgraph(640, 480);\r\n\tfor (Parameter = start_val; Parameter <= end_val; Parameter += step_val) {\r\n\t\tcal_coord(x_ptr, y_ptr,);\r\n\t\tputpixel(Draw_x, Draw_y, RED);\r\n\t}\r\n\t_getch();\r\n\tclosegraph();\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/semantics.cpp b/semantics.cpp
--- a/semantics.cpp	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/semantics.cpp	(date 1671540460954)
@@ -78,7 +78,7 @@
 {
 	initgraph(640, 480);
 	for (Parameter = start_val; Parameter <= end_val; Parameter += step_val) {
-		cal_coord(x_ptr, y_ptr,);
+		cal_coord(x_ptr, y_ptr);
 		putpixel(Draw_x, Draw_y, RED);
 	}
 	_getch();
Index: scanner.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ifndef COMPILE_EXPERIMENT_SCANNER_H\r\n#define COMPILE_EXPERIMENT_SCANNER_H\r\n\r\n#include <stdio.h>\r\n#include <math.h>\r\n\r\nenum Token_Type\t\t\t  // 记号的类别\r\n{\r\n    ORIGIN, SCALE, ROT, IS,\t  // 保留字（一字一码）\r\n    TO, STEP, DRAW,FOR, FROM, // 保留字\r\n    T,\t\t\t\t  // 参数\r\n    SEMICO, L_BRACKET, R_BRACKET, COMMA,// 分隔符\r\n    PLUS, MINUS, MUL, DIV, POWER,\t\t// 运算符\r\n    FUNC,\t\t\t\t  // 函数（调用）\r\n    CONST_ID,\t\t\t  // 常数\r\n    NONTOKEN,\t\t\t  // 空记号（源程序结束）\r\n    ERRTOKEN\t\t\t  // 出错记号（非法输入）\r\n};\r\n\r\nstruct Token\r\n{\r\n    enum Token_Type  type;  // 类别，规定所有记号的类别（命名常数便于记忆/理解）\r\n    char * lexeme;  // 属性，原始输入的字符串，亦可为数组\r\n    double value;  // 属性，若记号是常数则存常数的值\r\n    double (* FuncPtr)(double);  // 属性，若记号是函数则存函数地址\r\n\r\n};\r\n\r\n//区分记号的符号表\r\nstruct Token TokenTab[] = {\r\n        {CONST_ID, \"PI\", 3.1415926, NULL},\r\n        {CONST_ID, \"E\", 2.71828, NULL},\r\n        {T, \"T\",\t 0.0, NULL},\r\n        {FUNC, \"SIN\", 0.0, sin},\r\n        {FUNC, \"COS\", 0.0, cos},\r\n        {FUNC, \"TAN\", 0.0, tan},\r\n        {FUNC, \"LN\", 0.0, log},\r\n        {FUNC, \"EXP\", 0.0, exp},\r\n        {FUNC, \"SQRT\", 0.0, sqrt},\r\n        {ORIGIN, \"ORIGIN\", 0.0, NULL},\r\n        {SCALE, \"SCALE\", 0.0, NULL},\r\n        {ROT, \"ROT\", 0.0, NULL},\r\n        {IS, \"IS\", 0.0, NULL},\r\n        {FOR, \"FOR\", 0.0, NULL},\r\n        {FROM, \"FROM\", 0.0, NULL},\r\n        {TO, \"TO\", 0.0, NULL},\r\n        {STEP, \"STEP\", 0.0, NULL},\r\n        {DRAW, \"DRAW\", 0.0, NULL}\r\n};\r\n\r\nconst int token_len = 100;\r\n\r\nclass scanner{\r\n\r\n    FILE * file;  //输入文件流\r\n    char token_buf[token_len];  // 记号字符缓冲\r\n\r\npublic:\r\n\r\n    unsigned int line_no;  //表示记号所在源文件的行号\r\n    scanner(){ line_no = 1; } //行号默认为1\r\n    int InitScanner(const char* fileName);  //初始化词法分析器，成功时返回非0，失败返回0\r\n    struct Token GetToken();  //识别并返回一个记号。遇到非法输入时 .type=ERRTOKEN、文件结束时 .type=NONTOKEN\r\n    void CloseScanner();  //关闭词法分析器\r\n\r\nprivate:\r\n\r\n    char get_char();\t\t\t\t            // 从输入源程序中读入一个字符\r\n    void back_char(char next_char);\t\t\t    // 把预读的字符退回到输入源程序中\r\n    void add_in_token_str(char next_char);\t\t// 加入字符到记号缓冲区\r\n    void empty_token_str();\t\t\t\t        // 清空记号缓冲区\r\n    Token check_token(const char *c_str);\t// 判断所给的字符串是否在符号表中\r\n\r\n};\r\n\r\n\r\n\r\n#endif //COMPILE_EXPERIMENT_SCANNER_H\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scanner.h b/scanner.h
--- a/scanner.h	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/scanner.h	(date 1671539597708)
@@ -1,7 +1,12 @@
 #ifndef COMPILE_EXPERIMENT_SCANNER_H
 #define COMPILE_EXPERIMENT_SCANNER_H
 
+#include <string.h>
+#include <iostream>
 #include <stdio.h>
+#include <stdlib.h>
+#include <ctype.h>
+#include <stdarg.h>
 #include <math.h>
 
 enum Token_Type			  // 记号的类别
Index: semantics.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ifndef SEMANTICS_H\r\n#define SEMANTICS_H\r\n\r\n#include \"scanner.h\"\r\n#include \"parse.h\"\r\n\r\n//语义分析主要通过在语法分析过程得到实现。\r\n//由于没有采用面向对象的方法，语义分析通过加入语义分析辅助函数后的语法分析函数实现\r\n\r\n//全局变量区\r\nextern struct Token token;\r\n\r\nextern double Parameter; //参数\r\nextern double Origin_x, Origin_y ;  //横、纵平移距离\r\nextern double Rot_ang; //旋转角度\r\nextern double Scale_x, Scale_y ;   //横、纵比例因子\r\n\r\n//数据结构区\r\ntypedef double(*FuncPtr)(double);\r\n\r\n//辅助语义函数\r\n\r\n// 获得表达式的值\r\ndouble get_expr_value(struct ExprNode *root);\r\n// 计算点的坐标\r\nvoid cal_coord(struct ExprNode *x_ptr, struct ExprNode *y_ptr, double &x, double &y);\r\n// 绘制一个点\r\nvoid draw_pixel(unsigned long x, unsigned long y);\r\n// 图形绘制\r\nvoid draw_loop(double start_val, double end_val, double step_val, struct ExprNode *x_ptr, struct ExprNode *y_ptr);\r\n\r\n#endif\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/semantics.h b/semantics.h
--- a/semantics.h	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/semantics.h	(date 1671541100961)
@@ -1,7 +1,7 @@
 #ifndef SEMANTICS_H
 #define SEMANTICS_H
 
-#include "scanner.h"
+
 #include "parse.h"
 
 //语义分析主要通过在语法分析过程得到实现。
Index: CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>cmake_minimum_required(VERSION 3.21)\r\nproject(compile_experiment)\r\n\r\nset(CMAKE_CXX_STANDARD 14)\r\n\r\ninclude_directories(SYSTEM \"/foo/bar\")\r\n\r\nset(EasyX_INC D:\\\\EasyX\\\\include) # 你的include地址\r\nset(EasyX_LINK D:\\\\EasyX\\\\lib\\\\VC2015\\\\x64) # 找与自己的环境配置对应的版本\r\ninclude_directories(${EasyX_INC})\r\nlink_directories(${EasyX_LINK})\r\n#在lib对应的文件夹里面找lib文件（一般只有EasyXa和EasyXw这两个，进行链接）\r\nlink_libraries(EasyXa)\r\nlink_libraries(EasyXw)\r\n\r\nlink_libraries(libeasyx.a)\r\n\r\nadd_executable(compile_experiment main.cpp scanner.cpp scanner.h parse.cpp parse.h semantics.c semantics.h)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/CMakeLists.txt	(date 1671540364939)
@@ -15,4 +15,4 @@
 
 link_libraries(libeasyx.a)
 
-add_executable(compile_experiment main.cpp scanner.cpp scanner.h parse.cpp parse.h semantics.c semantics.h)
+add_executable(compile_experiment main.cpp scanner.cpp scanner.h parse.cpp parse.h semantics.cpp semantics.h)
Index: main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <stdio.h>\r\n#include \"parse.h\"\r\n\r\n//检查文件是否能正常打开\r\nint CheckSrcFile(const char * file_name){\r\n\r\n    FILE  * file = NULL;\r\n    if(file_name == NULL || file_name[0] == '\\0'){\r\n        fprintf(stderr, \"未指定源文件\");\r\n        return 0;\r\n    }\r\n    if((file = fopen(file_name, \"r\")) == NULL){\r\n        fprintf(stderr, \"文件打开失败\");\r\n    }\r\n    else fclose(file);\r\n    return 1;\r\n}\r\n\r\n\r\nint main(int argc, char*argv[]) {\r\n\r\n    if(argc < 2) printf(\"Cannot detect file\");\r\n    if(CheckSrcFile(argv[1]) == 0) return 1;\r\n\r\n    Parser(argv[1]);\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/main.cpp b/main.cpp
--- a/main.cpp	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/main.cpp	(date 1671539803714)
@@ -22,7 +22,7 @@
     if(argc < 2) printf("Cannot detect file");
     if(CheckSrcFile(argv[1]) == 0) return 1;
 
-    Parser(argv[1]);
+    Parser("C:\\Users\\Kas\\Desktop\\test.txt");
 
 
 }
Index: cmake-build-debug/CMakeFiles/clion-log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"D:\\Software\\JetBrains\\CLion 2021.3.3\\bin\\cmake\\win\\bin\\cmake.exe\" -DCMAKE_BUILD_TYPE=Debug \"-DCMAKE_MAKE_PROGRAM=D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe\" -G Ninja D:\\code\\compile_experiment\r\n-- The C compiler identification is MSVC 19.34.31937.0\r\n-- The CXX compiler identification is MSVC 19.34.31937.0\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: D:/Software/VS2022/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Check for working CXX compiler: D:/Software/VS2022/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe - skipped\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Configuring done\r\nCMake Error at CMakeLists.txt:18 (add_executable):\r\n  Cannot find source file:\r\n\r\n    semantics.c\r\n\r\n\r\nCMake Error at CMakeLists.txt:18 (add_executable):\r\n  No SOURCES given to target: compile_experiment\r\n\r\n\r\nCMake Generate step failed.  Build files cannot be regenerated correctly.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/clion-log.txt b/cmake-build-debug/CMakeFiles/clion-log.txt
--- a/cmake-build-debug/CMakeFiles/clion-log.txt	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/cmake-build-debug/CMakeFiles/clion-log.txt	(date 1671540367907)
@@ -1,25 +1,4 @@
 "D:\Software\JetBrains\CLion 2021.3.3\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe" -G Ninja D:\code\compile_experiment
--- The C compiler identification is MSVC 19.34.31937.0
--- The CXX compiler identification is MSVC 19.34.31937.0
--- Detecting C compiler ABI info
--- Detecting C compiler ABI info - done
--- Check for working C compiler: D:/Software/VS2022/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe - skipped
--- Detecting C compile features
--- Detecting C compile features - done
--- Detecting CXX compiler ABI info
--- Detecting CXX compiler ABI info - done
--- Check for working CXX compiler: D:/Software/VS2022/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe - skipped
--- Detecting CXX compile features
--- Detecting CXX compile features - done
 -- Configuring done
-CMake Error at CMakeLists.txt:18 (add_executable):
-  Cannot find source file:
-
-    semantics.c
-
-
-CMake Error at CMakeLists.txt:18 (add_executable):
-  No SOURCES given to target: compile_experiment
-
-
-CMake Generate step failed.  Build files cannot be regenerated correctly.
+-- Generating done
+-- Build files have been written to: D:/code/compile_experiment/cmake-build-debug
Index: cmake-build-debug/CMakeFiles/CMakeOutput.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>The system is: Windows - 10.0.22000 - AMD64\r\nCompiling the C compiler identification source file \"CMakeCCompilerId.c\" succeeded.\r\nCompiler: D:/Software/VS2022/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe \r\nBuild flags: \r\nId flags:  \r\n\r\nThe output was:\r\n0\r\n用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31937 版\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\nCMakeCCompilerId.c\r\nMicrosoft (R) Incremental Linker Version 14.34.31937.0\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n/out:CMakeCCompilerId.exe \r\nCMakeCCompilerId.obj \r\n\r\n\r\nCompilation of the C compiler identification source \"CMakeCCompilerId.c\" produced \"CMakeCCompilerId.exe\"\r\n\r\nCompilation of the C compiler identification source \"CMakeCCompilerId.c\" produced \"CMakeCCompilerId.obj\"\r\n\r\nThe C compiler identification is MSVC, found in \"D:/code/compile_experiment/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/CMakeCCompilerId.exe\"\r\n\r\nCompiling the CXX compiler identification source file \"CMakeCXXCompilerId.cpp\" succeeded.\r\nCompiler: D:/Software/VS2022/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe \r\nBuild flags: \r\nId flags:  \r\n\r\nThe output was:\r\n0\r\n用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.34.31937 版\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\nCMakeCXXCompilerId.cpp\r\nMicrosoft (R) Incremental Linker Version 14.34.31937.0\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n/out:CMakeCXXCompilerId.exe \r\nCMakeCXXCompilerId.obj \r\n\r\n\r\nCompilation of the CXX compiler identification source \"CMakeCXXCompilerId.cpp\" produced \"CMakeCXXCompilerId.exe\"\r\n\r\nCompilation of the CXX compiler identification source \"CMakeCXXCompilerId.cpp\" produced \"CMakeCXXCompilerId.obj\"\r\n\r\nThe CXX compiler identification is MSVC, found in \"D:/code/compile_experiment/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdCXX/CMakeCXXCompilerId.exe\"\r\n\r\nDetecting C compiler ABI info compiled with the following output:\r\nChange Dir: D:/code/compile_experiment/cmake-build-debug/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command(s):D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe cmTC_f8eb8 && [1/2] Building C object CMakeFiles\\cmTC_f8eb8.dir\\CMakeCCompilerABI.c.obj\r\r\n[2/2] Linking C executable cmTC_f8eb8.exe\r\r\n\r\n\r\n\r\nDetecting CXX compiler ABI info compiled with the following output:\r\nChange Dir: D:/code/compile_experiment/cmake-build-debug/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command(s):D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe cmTC_67d33 && [1/2] Building CXX object CMakeFiles\\cmTC_67d33.dir\\CMakeCXXCompilerABI.cpp.obj\r\r\n[2/2] Linking CXX executable cmTC_67d33.exe\r\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/CMakeOutput.log b/cmake-build-debug/CMakeFiles/CMakeOutput.log
--- a/cmake-build-debug/CMakeFiles/CMakeOutput.log	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/cmake-build-debug/CMakeFiles/CMakeOutput.log	(date 1671540354164)
@@ -50,9 +50,9 @@
 Detecting C compiler ABI info compiled with the following output:
 Change Dir: D:/code/compile_experiment/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe cmTC_f8eb8 && [1/2] Building C object CMakeFiles\cmTC_f8eb8.dir\CMakeCCompilerABI.c.obj
+Run Build Command(s):D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe cmTC_283ba && [1/2] Building C object CMakeFiles\cmTC_283ba.dir\CMakeCCompilerABI.c.obj
 
-[2/2] Linking C executable cmTC_f8eb8.exe
+[2/2] Linking C executable cmTC_283ba.exe
 
 
 
@@ -60,9 +60,9 @@
 Detecting CXX compiler ABI info compiled with the following output:
 Change Dir: D:/code/compile_experiment/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe cmTC_67d33 && [1/2] Building CXX object CMakeFiles\cmTC_67d33.dir\CMakeCXXCompilerABI.cpp.obj
+Run Build Command(s):D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe cmTC_be529 && [1/2] Building CXX object CMakeFiles\cmTC_be529.dir\CMakeCXXCompilerABI.cpp.obj
 
-[2/2] Linking CXX executable cmTC_67d33.exe
+[2/2] Linking CXX executable cmTC_be529.exe
 
 
 
Index: cmake-build-debug/Testing/Temporary/LastTest.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Start testing: Dec 20 17:14 ?D1ú±ê×?ê±??\r\n----------------------------------------------------------\r\nEnd testing: Dec 20 17:14 ?D1ú±ê×?ê±??\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
--- a/cmake-build-debug/Testing/Temporary/LastTest.log	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/cmake-build-debug/Testing/Temporary/LastTest.log	(date 1671540368081)
@@ -1,3 +1,3 @@
-Start testing: Dec 20 17:14 ?D1ú±ê×?ê±??
+Start testing: Dec 20 20:46 ?D1ú±ê×?ê±??
 ----------------------------------------------------------
-End testing: Dec 20 17:14 ?D1ú±ê×?ê±??
+End testing: Dec 20 20:46 ?D1ú±ê×?ê±??
Index: cmake-build-debug/build.ninja
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># CMAKE generated file: DO NOT EDIT!\r\n# Generated by \"Ninja\" Generator, CMake Version 3.21\r\n\r\n# This file contains all the build statements describing the\r\n# compilation DAG.\r\n\r\n# =============================================================================\r\n# Write statements declared in CMakeLists.txt:\r\n# \r\n# Which is the root file.\r\n# =============================================================================\r\n\r\n# =============================================================================\r\n# Project: compile_experiment\r\n# Configurations: Debug\r\n# =============================================================================\r\n\r\n#############################################\r\n# Minimal version of Ninja required by this file\r\n\r\nninja_required_version = 1.5\r\n\r\n\r\n#############################################\r\n# Set configuration variable for custom commands.\r\n\r\nCONFIGURATION = Debug\r\n# =============================================================================\r\n# Include auxiliary files.\r\n\r\n\r\n#############################################\r\n# Include rules file.\r\n\r\ninclude CMakeFiles\\rules.ninja\r\n\r\n# =============================================================================\r\n\r\n#############################################\r\n# Logical path to working directory; prefix for absolute paths.\r\n\r\ncmake_ninja_workdir = D$:\\code\\compile_experiment\\cmake-build-debug\\\r\n\r\n#############################################\r\n# Utility command for edit_cache\r\n\r\nbuild CMakeFiles\\edit_cache.util: CUSTOM_COMMAND\r\n  COMMAND = cmd.exe /C \"cd /D D:\\code\\compile_experiment\\cmake-build-debug && \"D:\\Software\\JetBrains\\CLion 2021.3.3\\bin\\cmake\\win\\bin\\cmake.exe\" -E echo \"No interactive CMake dialog available.\"\"\r\n  DESC = No interactive CMake dialog available...\r\n  restat = 1\r\n\r\nbuild edit_cache: phony CMakeFiles\\edit_cache.util\r\n\r\n# =============================================================================\r\n# Object build statements for EXECUTABLE target compile_experiment\r\n\r\n\r\n#############################################\r\n# Order-only phony target for compile_experiment\r\n\r\nbuild cmake_object_order_depends_target_compile_experiment: phony || CMakeFiles\\compile_experiment.dir\r\n\r\nbuild CMakeFiles\\compile_experiment.dir\\main.cpp.obj: CXX_COMPILER__compile_experiment_Debug D$:\\code\\compile_experiment\\main.cpp || cmake_object_order_depends_target_compile_experiment\r\n  FLAGS = /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++14\r\n  INCLUDES = -ID:\\EasyX\\include -I\\foo\\bar\r\n  OBJECT_DIR = CMakeFiles\\compile_experiment.dir\r\n  OBJECT_FILE_DIR = CMakeFiles\\compile_experiment.dir\r\n  TARGET_COMPILE_PDB = CMakeFiles\\compile_experiment.dir\\\r\n  TARGET_PDB = compile_experiment.pdb\r\n\r\nbuild CMakeFiles\\compile_experiment.dir\\scanner.cpp.obj: CXX_COMPILER__compile_experiment_Debug D$:\\code\\compile_experiment\\scanner.cpp || cmake_object_order_depends_target_compile_experiment\r\n  FLAGS = /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++14\r\n  INCLUDES = -ID:\\EasyX\\include -I\\foo\\bar\r\n  OBJECT_DIR = CMakeFiles\\compile_experiment.dir\r\n  OBJECT_FILE_DIR = CMakeFiles\\compile_experiment.dir\r\n  TARGET_COMPILE_PDB = CMakeFiles\\compile_experiment.dir\\\r\n  TARGET_PDB = compile_experiment.pdb\r\n\r\nbuild CMakeFiles\\compile_experiment.dir\\parse.cpp.obj: CXX_COMPILER__compile_experiment_Debug D$:\\code\\compile_experiment\\parse.cpp || cmake_object_order_depends_target_compile_experiment\r\n  FLAGS = /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++14\r\n  INCLUDES = -ID:\\EasyX\\include -I\\foo\\bar\r\n  OBJECT_DIR = CMakeFiles\\compile_experiment.dir\r\n  OBJECT_FILE_DIR = CMakeFiles\\compile_experiment.dir\r\n  TARGET_COMPILE_PDB = CMakeFiles\\compile_experiment.dir\\\r\n  TARGET_PDB = compile_experiment.pdb\r\n\r\nbuild CMakeFiles\\compile_experiment.dir\\semantics.c.obj: C_COMPILER__compile_experiment_Debug D$:\\code\\compile_experiment\\semantics.c || cmake_object_order_depends_target_compile_experiment\r\n  FLAGS = /DWIN32 /D_WINDOWS /Zi /Ob0 /Od /RTC1 -MDd\r\n  INCLUDES = -ID:\\EasyX\\include -I\\foo\\bar\r\n  OBJECT_DIR = CMakeFiles\\compile_experiment.dir\r\n  OBJECT_FILE_DIR = CMakeFiles\\compile_experiment.dir\r\n  TARGET_COMPILE_PDB = CMakeFiles\\compile_experiment.dir\\\r\n  TARGET_PDB = compile_experiment.pdb\r\n\r\n\r\n# =============================================================================\r\n# Link build statements for EXECUTABLE target compile_experiment\r\n\r\n\r\n#############################################\r\n# Link the executable compile_experiment.exe\r\n\r\nbuild compile_experiment.exe: CXX_EXECUTABLE_LINKER__compile_experiment_Debug CMakeFiles\\compile_experiment.dir\\main.cpp.obj CMakeFiles\\compile_experiment.dir\\scanner.cpp.obj CMakeFiles\\compile_experiment.dir\\parse.cpp.obj CMakeFiles\\compile_experiment.dir\\semantics.c.obj\r\n  FLAGS = /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd\r\n  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console\r\n  LINK_LIBRARIES = EasyXa.lib  EasyXw.lib  libeasyx.a.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\r\n  LINK_PATH = -LIBPATH:D:\\EasyX\\lib\\VC2015\\x64\r\n  OBJECT_DIR = CMakeFiles\\compile_experiment.dir\r\n  POST_BUILD = cd .\r\n  PRE_LINK = cd .\r\n  TARGET_COMPILE_PDB = CMakeFiles\\compile_experiment.dir\\\r\n  TARGET_FILE = compile_experiment.exe\r\n  TARGET_IMPLIB = compile_experiment.lib\r\n  TARGET_PDB = compile_experiment.pdb\r\n\r\n\r\n#############################################\r\n# Utility command for rebuild_cache\r\n\r\nbuild CMakeFiles\\rebuild_cache.util: CUSTOM_COMMAND\r\n  COMMAND = cmd.exe /C \"cd /D D:\\code\\compile_experiment\\cmake-build-debug && \"D:\\Software\\JetBrains\\CLion 2021.3.3\\bin\\cmake\\win\\bin\\cmake.exe\" --regenerate-during-build -SD:\\code\\compile_experiment -BD:\\code\\compile_experiment\\cmake-build-debug\"\r\n  DESC = Running CMake to regenerate build system...\r\n  pool = console\r\n  restat = 1\r\n\r\nbuild rebuild_cache: phony CMakeFiles\\rebuild_cache.util\r\n\r\n# =============================================================================\r\n# Target aliases.\r\n\r\nbuild compile_experiment: phony compile_experiment.exe\r\n\r\n# =============================================================================\r\n# Folder targets.\r\n\r\n# =============================================================================\r\n\r\n#############################################\r\n# Folder: D:/code/compile_experiment/cmake-build-debug\r\n\r\nbuild all: phony compile_experiment.exe\r\n\r\n# =============================================================================\r\n# Built-in targets\r\n\r\n\r\n#############################################\r\n# Re-run CMake if any of its inputs changed.\r\n\r\nbuild build.ninja: RERUN_CMAKE | ..\\CMakeLists.txt CMakeCache.txt CMakeFiles\\3.21.1\\CMakeCCompiler.cmake CMakeFiles\\3.21.1\\CMakeCXXCompiler.cmake CMakeFiles\\3.21.1\\CMakeRCCompiler.cmake CMakeFiles\\3.21.1\\CMakeSystem.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCCompiler.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCCompilerABI.c D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCXXCompiler.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCXXCompilerABI.cpp D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCXXInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCommonLanguageInclude.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCompilerIdDetection.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCXXCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompileFeatures.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompilerABI.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompilerId.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineRCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineSystem.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeFindBinUtils.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeGenericSystem.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeInitializeConfigs.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeLanguageInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeParseImplicitIncludeInfo.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeParseImplicitLinkInfo.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeParseLibraryArchitecture.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeRCCompiler.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeRCInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeSystem.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeSystemSpecificInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeSystemSpecificInitialize.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestCXXCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestCompilerCommon.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestRCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ADSP-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ARMCC-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ARMClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\AppleClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Borland-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Bruce-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\CMakeCommonCompilerMacros.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Clang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Clang-DetermineCompilerInternal.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Comeau-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Compaq-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Compaq-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Cray-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Embarcadero-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Fujitsu-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\FujitsuClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\GHS-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\GNU-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\GNU-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\HP-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\HP-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IAR-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IBMCPP-C-DetermineVersionInternal.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IBMCPP-CXX-DetermineVersionInternal.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Intel-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IntelLLVM-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\MSVC-C.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\MSVC-CXX.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\MSVC-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\NVHPC-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\NVIDIA-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\OpenWatcom-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\PGI-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\PathScale-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ROCMClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SCO-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SDCC-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SunPro-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SunPro-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\TI-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\TinyCC-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\VisualAge-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\VisualAge-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Watcom-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XL-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XL-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XLClang-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XLClang-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\zOS-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\zOS-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Internal\\FeatureTesting.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-Determine-CXX.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-MSVC-C.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-MSVC-CXX.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-MSVC.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\WindowsPaths.cmake\r\n  pool = console\r\n\r\n\r\n#############################################\r\n# A missing CMake input file is not an error.\r\n\r\nbuild ..\\CMakeLists.txt CMakeCache.txt CMakeFiles\\3.21.1\\CMakeCCompiler.cmake CMakeFiles\\3.21.1\\CMakeCXXCompiler.cmake CMakeFiles\\3.21.1\\CMakeRCCompiler.cmake CMakeFiles\\3.21.1\\CMakeSystem.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCCompiler.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCCompilerABI.c D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCXXCompiler.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCXXCompilerABI.cpp D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCXXInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCommonLanguageInclude.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeCompilerIdDetection.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCXXCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompileFeatures.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompilerABI.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineCompilerId.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineRCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeDetermineSystem.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeFindBinUtils.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeGenericSystem.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeInitializeConfigs.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeLanguageInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeParseImplicitIncludeInfo.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeParseImplicitLinkInfo.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeParseLibraryArchitecture.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeRCCompiler.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeRCInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeSystem.cmake.in D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeSystemSpecificInformation.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeSystemSpecificInitialize.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestCXXCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestCompilerCommon.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\CMakeTestRCCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ADSP-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ARMCC-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ARMClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\AppleClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Borland-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Bruce-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\CMakeCommonCompilerMacros.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Clang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Clang-DetermineCompilerInternal.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Comeau-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Compaq-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Compaq-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Cray-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Embarcadero-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Fujitsu-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\FujitsuClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\GHS-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\GNU-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\GNU-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\HP-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\HP-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IAR-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IBMCPP-C-DetermineVersionInternal.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IBMCPP-CXX-DetermineVersionInternal.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Intel-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\IntelLLVM-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\MSVC-C.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\MSVC-CXX.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\MSVC-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\NVHPC-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\NVIDIA-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\OpenWatcom-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\PGI-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\PathScale-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\ROCMClang-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SCO-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SDCC-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SunPro-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\SunPro-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\TI-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\TinyCC-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\VisualAge-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\VisualAge-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\Watcom-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XL-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XL-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XLClang-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\XLClang-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\zOS-C-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Compiler\\zOS-CXX-DetermineCompiler.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Internal\\FeatureTesting.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-Determine-CXX.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-MSVC-C.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-MSVC-CXX.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows-MSVC.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\Windows.cmake D$:\\Software\\JetBrains\\CLion$ 2021.3.3\\bin\\cmake\\win\\share\\cmake-3.21\\Modules\\Platform\\WindowsPaths.cmake: phony\r\n\r\n\r\n#############################################\r\n# Clean all the built files.\r\n\r\nbuild clean: CLEAN\r\n\r\n\r\n#############################################\r\n# Print all primary targets available.\r\n\r\nbuild help: HELP\r\n\r\n\r\n#############################################\r\n# Make the all target the default.\r\n\r\ndefault all\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
--- a/cmake-build-debug/build.ninja	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/cmake-build-debug/build.ninja	(date 1671540367220)
@@ -84,8 +84,8 @@
   TARGET_COMPILE_PDB = CMakeFiles\compile_experiment.dir\
   TARGET_PDB = compile_experiment.pdb
 
-build CMakeFiles\compile_experiment.dir\semantics.c.obj: C_COMPILER__compile_experiment_Debug D$:\code\compile_experiment\semantics.c || cmake_object_order_depends_target_compile_experiment
-  FLAGS = /DWIN32 /D_WINDOWS /Zi /Ob0 /Od /RTC1 -MDd
+build CMakeFiles\compile_experiment.dir\semantics.cpp.obj: CXX_COMPILER__compile_experiment_Debug D$:\code\compile_experiment\semantics.cpp || cmake_object_order_depends_target_compile_experiment
+  FLAGS = /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd -std:c++14
   INCLUDES = -ID:\EasyX\include -I\foo\bar
   OBJECT_DIR = CMakeFiles\compile_experiment.dir
   OBJECT_FILE_DIR = CMakeFiles\compile_experiment.dir
@@ -100,7 +100,7 @@
 #############################################
 # Link the executable compile_experiment.exe
 
-build compile_experiment.exe: CXX_EXECUTABLE_LINKER__compile_experiment_Debug CMakeFiles\compile_experiment.dir\main.cpp.obj CMakeFiles\compile_experiment.dir\scanner.cpp.obj CMakeFiles\compile_experiment.dir\parse.cpp.obj CMakeFiles\compile_experiment.dir\semantics.c.obj
+build compile_experiment.exe: CXX_EXECUTABLE_LINKER__compile_experiment_Debug CMakeFiles\compile_experiment.dir\main.cpp.obj CMakeFiles\compile_experiment.dir\scanner.cpp.obj CMakeFiles\compile_experiment.dir\parse.cpp.obj CMakeFiles\compile_experiment.dir\semantics.cpp.obj
   FLAGS = /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd
   LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
   LINK_LIBRARIES = EasyXa.lib  EasyXw.lib  libeasyx.a.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
@@ -147,14 +147,14 @@
 #############################################
 # Re-run CMake if any of its inputs changed.
 
-build build.ninja: RERUN_CMAKE | ..\CMakeLists.txt CMakeCache.txt CMakeFiles\3.21.1\CMakeCCompiler.cmake CMakeFiles\3.21.1\CMakeCXXCompiler.cmake CMakeFiles\3.21.1\CMakeRCCompiler.cmake CMakeFiles\3.21.1\CMakeSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCCompiler.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCCompilerABI.c D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXCompiler.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXCompilerABI.cpp D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCompilerIdDetection.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCXXCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompileFeatures.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompilerABI.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompilerId.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineRCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeFindBinUtils.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeGenericSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeParseImplicitIncludeInfo.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeParseImplicitLinkInfo.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeParseLibraryArchitecture.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeRCCompiler.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeRCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystem.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestCXXCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestCompilerCommon.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestRCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ADSP-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ARMCC-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ARMClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\AppleClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Borland-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Bruce-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Clang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Clang-DetermineCompilerInternal.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Compaq-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Cray-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Embarcadero-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Fujitsu-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\GHS-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\GNU-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\HP-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\HP-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IAR-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Intel-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\NVHPC-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\NVIDIA-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\PGI-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\PathScale-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ROCMClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SCO-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SDCC-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SunPro-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\TI-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Watcom-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XL-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XL-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XLClang-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\zOS-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Internal\FeatureTesting.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-Determine-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake
+build build.ninja: RERUN_CMAKE | ..\CMakeLists.txt CMakeCache.txt CMakeFiles\3.21.1\CMakeCCompiler.cmake CMakeFiles\3.21.1\CMakeCXXCompiler.cmake CMakeFiles\3.21.1\CMakeRCCompiler.cmake CMakeFiles\3.21.1\CMakeSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeGenericSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeRCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake
   pool = console
 
 
 #############################################
 # A missing CMake input file is not an error.
 
-build ..\CMakeLists.txt CMakeCache.txt CMakeFiles\3.21.1\CMakeCCompiler.cmake CMakeFiles\3.21.1\CMakeCXXCompiler.cmake CMakeFiles\3.21.1\CMakeRCCompiler.cmake CMakeFiles\3.21.1\CMakeSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCCompiler.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCCompilerABI.c D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXCompiler.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXCompilerABI.cpp D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCompilerIdDetection.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCXXCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompileFeatures.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompilerABI.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineCompilerId.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineRCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeDetermineSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeFindBinUtils.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeGenericSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeParseImplicitIncludeInfo.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeParseImplicitLinkInfo.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeParseLibraryArchitecture.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeRCCompiler.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeRCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystem.cmake.in D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestCXXCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestCompilerCommon.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeTestRCCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ADSP-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ARMCC-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ARMClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\AppleClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Borland-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Bruce-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Clang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Clang-DetermineCompilerInternal.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Compaq-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Cray-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Embarcadero-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Fujitsu-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\GHS-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\GNU-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\HP-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\HP-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IAR-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Intel-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\NVHPC-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\NVIDIA-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\PGI-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\PathScale-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\ROCMClang-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SCO-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SDCC-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SunPro-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\TI-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\Watcom-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XL-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XL-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XLClang-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\zOS-C-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Internal\FeatureTesting.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-Determine-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake: phony
+build ..\CMakeLists.txt CMakeCache.txt CMakeFiles\3.21.1\CMakeCCompiler.cmake CMakeFiles\3.21.1\CMakeCXXCompiler.cmake CMakeFiles\3.21.1\CMakeRCCompiler.cmake CMakeFiles\3.21.1\CMakeSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCXXInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeGenericSystem.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeRCInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Compiler\MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC-CXX.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\Windows.cmake D$:\Software\JetBrains\CLion$ 2021.3.3\bin\cmake\win\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake: phony
 
 
 #############################################
Index: cmake-build-debug/CMakeFiles/clion-environment.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>ToolSet: 17.0 (local)@D:\\Software\\VS2022\r\nOptions: msvc.arch=amd64\r\n\r\nOptions:-DCMAKE_MAKE_PROGRAM=D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/clion-environment.txt b/cmake-build-debug/CMakeFiles/clion-environment.txt
--- a/cmake-build-debug/CMakeFiles/clion-environment.txt	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/cmake-build-debug/CMakeFiles/clion-environment.txt	(date 1671540366940)
@@ -1,4 +1,4 @@
 ToolSet: 17.0 (local)@D:\Software\VS2022
 Options: msvc.arch=amd64
 
-Options:-DCMAKE_MAKE_PROGRAM=D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe
\ No newline at end of file
+Options:-DCMAKE_MAKE_PROGRAM=D:/Software/JetBrains/CLion 2021.3.3/bin/ninja/win/ninja.exe -G Ninja
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\r\n    <generated>\r\n      <config projectName=\"compile_experiment\" targetName=\"compile_experiment\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\" AUTO_RELOAD=\"true\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a3e6652e-7532-4a0e-b717-058505b9e8ec\" name=\"Changes\" comment=\"简单写了下console版本的界面\">\r\n      <change afterPath=\"$PROJECT_DIR$/.vs/VSWorkspaceState.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.vs/compile_experiment/FileContentIndex/7f7ab1fa-ee47-433e-b281-e3e58b17e5ae.vsidx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.vs/compile_experiment/v17/.wsuo\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cache-v2-ebcd74a65a4e23db4d97.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-a1437ecc663e0c34a7b3.json\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCCompiler.cmake\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCCompiler.cmake\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCXXCompiler.cmake\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCXXCompiler.cmake\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_C.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_C.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_CXX.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_CXX.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeRCCompiler.cmake\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeRCCompiler.cmake\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/a.exe\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdCXX/a.exe\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/build.ninja\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/build.ninja\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.cpp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/parse.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/parse.cpp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/scanner.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/scanner.cpp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/scanner.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/scanner.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/semantics.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/semantics.h\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2021\" />\r\n    <option name=\"minorVersion\" value=\"3.3\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2IcruJ1iEl2nFfCDVnZTBssCah8\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.highlight.mappings\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.highlight.symlinks\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.date\" value=\"false\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.permissions\" value=\"false\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.size\" value=\"false\" />\r\n    <property name=\"cf.first.check.clang-format\" value=\"false\" />\r\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"cmake.loaded.for.project\" value=\"true\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"CPPToolchains\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"compile_experiment\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"compile_experiment\" TARGET_NAME=\"compile_experiment\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"compile_experiment\" RUN_TARGET_NAME=\"compile_experiment\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a3e6652e-7532-4a0e-b717-058505b9e8ec\" name=\"Changes\" comment=\"\" />\r\n      <created>1670491936101</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1670491936101</updated>\r\n      <workItem from=\"1670491937451\" duration=\"7641000\" />\r\n      <workItem from=\"1670581477554\" duration=\"45000\" />\r\n      <workItem from=\"1670581540610\" duration=\"623000\" />\r\n      <workItem from=\"1670737069487\" duration=\"595000\" />\r\n      <workItem from=\"1670859685285\" duration=\"16000\" />\r\n      <workItem from=\"1670891810754\" duration=\"510000\" />\r\n      <workItem from=\"1670894334949\" duration=\"1239000\" />\r\n      <workItem from=\"1670998544549\" duration=\"169000\" />\r\n      <workItem from=\"1671182601791\" duration=\"1111000\" />\r\n      <workItem from=\"1671339644488\" duration=\"109000\" />\r\n      <workItem from=\"1671442840016\" duration=\"41000\" />\r\n      <workItem from=\"1671462870137\" duration=\"131000\" />\r\n      <workItem from=\"1671524290004\" duration=\"666000\" />\r\n      <workItem from=\"1671524975402\" duration=\"173000\" />\r\n      <workItem from=\"1671525230234\" duration=\"739000\" />\r\n      <workItem from=\"1671525997036\" duration=\"1420000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"default\">\r\n      <created>1670492246657</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670492246657</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"完成了词法分析器部分\">\r\n      <created>1670506006546</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670506006546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"简单写了下console版本的界面\">\r\n      <created>1671183666183</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671183666183</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"default\" />\r\n    <MESSAGE value=\"完成了词法分析器部分\" />\r\n    <MESSAGE value=\"简单写了下console版本的界面\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"简单写了下console版本的界面\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 93ca6054ebff59bf5f8b6f94c05530397d92bab0)
+++ b/.idea/workspace.xml	(date 1671540981315)
@@ -7,38 +7,24 @@
   </component>
   <component name="CMakeSettings" AUTO_RELOAD="true">
     <configurations>
-      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
+      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" GENERATION_OPTIONS="-G Ninja" />
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a3e6652e-7532-4a0e-b717-058505b9e8ec" name="Changes" comment="简单写了下console版本的界面">
-      <change afterPath="$PROJECT_DIR$/.vs/VSWorkspaceState.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.vs/compile_experiment/FileContentIndex/7f7ab1fa-ee47-433e-b281-e3e58b17e5ae.vsidx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.vs/compile_experiment/v17/.wsuo" afterDir="false" />
+    <list default="true" id="a3e6652e-7532-4a0e-b717-058505b9e8ec" name="Changes" comment="配置了下clion环境下的EasyX并简单写了点控制台界面">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cache-v2-ebcd74a65a4e23db4d97.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-a1437ecc663e0c34a7b3.json" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCCompiler.cmake" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCXXCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeCXXCompiler.cmake" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeRCCompiler.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CMakeRCCompiler.cmake" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdC/a.exe" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/3.21.1/CompilerIdCXX/a.exe" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-environment.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/cmake_install.cmake" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/parse.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/parse.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/scanner.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/scanner.cpp" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/scanner.h" beforeDir="false" afterPath="$PROJECT_DIR$/scanner.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/semantics.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/semantics.cpp" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/semantics.h" beforeDir="false" afterPath="$PROJECT_DIR$/semantics.h" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -91,15 +77,16 @@
     <property name="cf.first.check.clang-format" value="false" />
     <property name="cidr.known.project.marker" value="true" />
     <property name="cmake.loaded.for.project" value="true" />
-    <property name="settings.editor.selected.configurable" value="CPPToolchains" />
+    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="settings.editor.selected.configurable" value="CMakeSettings" />
   </component>
   <component name="RunManager">
-    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
+    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
       <method v="2">
-        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
       </method>
     </configuration>
-    <configuration name="compile_experiment" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="compile_experiment" TARGET_NAME="compile_experiment" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="compile_experiment" RUN_TARGET_NAME="compile_experiment">
+    <configuration name="main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="compile_experiment" TARGET_NAME="compile_experiment" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="compile_experiment" RUN_TARGET_NAME="compile_experiment">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
@@ -128,7 +115,9 @@
       <workItem from="1671524290004" duration="666000" />
       <workItem from="1671524975402" duration="173000" />
       <workItem from="1671525230234" duration="739000" />
-      <workItem from="1671525997036" duration="1420000" />
+      <workItem from="1671525997036" duration="3092000" />
+      <workItem from="1671540171435" duration="57000" />
+      <workItem from="1671540249645" duration="726000" />
     </task>
     <task id="LOCAL-00001" summary="default">
       <created>1670492246657</created>
@@ -151,7 +140,14 @@
       <option name="project" value="LOCAL" />
       <updated>1671183666183</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="配置了下clion环境下的EasyX并简单写了点控制台界面">
+      <created>1671528066355</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1671528066355</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -173,6 +169,18 @@
     <MESSAGE value="default" />
     <MESSAGE value="完成了词法分析器部分" />
     <MESSAGE value="简单写了下console版本的界面" />
-    <option name="LAST_COMMIT_MESSAGE" value="简单写了下console版本的界面" />
+    <MESSAGE value="配置了下clion环境下的EasyX并简单写了点控制台界面" />
+    <option name="LAST_COMMIT_MESSAGE" value="配置了下clion环境下的EasyX并简单写了点控制台界面" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
+          <url>file://$PROJECT_DIR$/semantics.h</url>
+          <line>3</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
 </project>
\ No newline at end of file
